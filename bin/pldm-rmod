#!/usr/bin/perl
#Copyright (c) 2009, Zane C. Bowers
#All rights reserved.
#
#Redistribution and use in source and binary forms, with or without modification,
#are permitted provided that the following conditions are met:
#
#   * Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
#THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
#ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
#WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
#IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
#INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
#BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
#DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
#LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
#THE POSSIBILITY OF SUCH DAMAGE.

use strict;
use warnings;
use Getopt::Std;
use BIND::SDB::LDAP::Helper;

$Getopt::Std::STANDARD_HELP_VERSION = 1;

#version function
sub main::VERSION_MESSAGE {
        print "pldm-rmod 0.0.0\n";
}

#print help
sub main::HELP_MESSAGE {
        print "\n".
			  "-a <A records>  A comma seperated list of A records.\n".
			  "-A <AAAA records>  A comma seperated list of AAAA records.\n".
		      "-c <config>  The config file to use.\n".
			  "-m <MX records>  A comma seperated list of MX records.\n".
			  "-r <relative>  The name of the relative domain name to add.\n".
			  "-p <PTR records>  A comma seperated list of PTR records.\n".
			  "-s <action type>  This if if the specified records should be added or removed.\n".
			  "-t <TXT record>  A comma seperated txt record.\n".
			  "-T <TTL>  Time to live for the relative domain name.\n".
			  "-z <zone>\n".
			  "\n".
			  "Action Types:\n".
			  "a - Add these to the specified record. This is the default.\n".
			  "d - Remove these from the specified record.\n";

		exit 1;
}

#gets the options
my %opts=();
getopts('a:A:c:m:r:p:s:t:T:z:', \%opts);

#init it
my $pldm=BIND::SDB::LDAP::Helper->new({configfile=>$opts{c}});
if ($pldm->{error}) {
	exit $pldm->{error};
}

if (!defined($opts{s})) {
	$opts{s}='a';
}

my @a;
if (defined($opts{a})) {
	@a=split(/\,/, $opts{a});
}
my @aaaa;
if (defined($opts{A})) {
	@aaaa=split(/\,/, $opts{A});
}
my @mx;
if (defined($opts{m})) {
	@mx=split(/\,/, $opts{m});
}
my @ptr;
if (defined($opts{p})) {
	@ptr=split(/\,/, $opts{p});
}
my @txt;
if (defined($opts{t})) {
	$txt[0]=$opts{t};
}

#handle adding it
if ($opts{s} eq 'a') {
	$pldm->addRecords({
					zone=>$opts{z},
					relative=>$opts{r},
					ttl=>$opts{T},
					a=>\@a,
					aaaa=>\@aaaa,
					mx=>\@mx,
					ptr=>\@ptr,
					txt=>\@txt,
					});
	if ($pldm->{error}) {
		exit $pldm->{error};
	}

	exit 0;
}

#handle adding it
if ($opts{s} eq 'd') {
	$pldm->removeRecords({
					zone=>$opts{z},
					relative=>$opts{r},
					ttl=>$opts{T},
					a=>\@a,
					aaaa=>\@aaaa,
					mx=>\@mx,
					ptr=>\@ptr,
					txt=>\@txt,
					});
	if ($pldm->{error}) {
		exit $pldm->{error};
	}

	exit 0;
}

exit 254;

=head1 NAME

pldm-rmod - Modify a relative domain name for a zone in LDAP.

=head1 SYNOPSIS

pldm-rmod [B<-c> <config>] B<-z> <zone> B<-r> <relative> [B<-a> <A records>] [B<-A> <AAAA records>]
[B<-m> <MX records>] [B<-t> <TXT records>] [B<-T> <TTL>]

=head1 SWITCHES

=head2 -a <A records>

A comma seperated list of A records.

=head2 -A <AAAA records>

A comma seperated list of AAAA records.

=head2 -c <config>

Override the default config file.

=head2 -m <MX records>

A comma seperated ist of MX records.

=head2 -r <relative>

The relative domain to work on..

=head2 -p <PTR records>

A comma seperated list of PTR records.

=head2 -s <action type>

=head3 a

Add the records.

=head4 d

Delete the records.

=head2 -t <TXT record>

A text record add/remove. Unlike the others,
only one is accepted.

=head2 -T <TTL>

This is the TTL to set it to if being added. If
being removed

=head2 -z <zone>

This is the zone to work on.

=head1 EXIT CODES

These reflect the error values returned by BIND::SDB::LDAP::Helper.

=head2 254

No matching action found.

=head1 AUTHOR

Copyright (c) 2009, Zame C. Bowers <vvelox@vvelox.net>

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright notice,
     this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
xFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS` OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

=head1 SCRIPT CATEGORIES

UNIX : System_administration

=head1 OSNAMES

any

=head2 SEE ALSO

BIND::SDB::LDAP::Helper

=head1 README

pldm-rmod - Modify a relative domain name for a zone in LDAP.

=cut
